version: '3'
services:
  backend:
    build:
      context: ./backend
    environment:
      DATABASE_CLIENT: postgres
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
    volumes:
      - ./backend:/srv/backend
    depends_on:
      - postgres
    restart: always
    ports:
      - 3000:3000

  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    ports:
        - 5433:5432
    volumes:
      - ./data:/var/lib/postgresql/data
  
  frontend:
    build:
      context: ./frontend
    restart: always
    environment: 
      NODE_ORACLEDB_USER: ${NODE_ORACLEDB_USER}
      NODE_ORACLEDB_PASSWORD: ${NODE_ORACLEDB_PASSWORD}
      NODE_ORACLEDB_CONNECTIONSTRING: ${NODE_ORACLEDB_CONNECTIONSTRING}
      AZURE_CLIENT_ID: ${AZURE_CLIENT_ID}
      AZURE_CLIENT_SECRET: ${AZURE_CLIENT_SECRET}
      AZURE_TENANT_ID: ${AZURE_TENANT_ID}
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
      DATABASE_URL: ${DATABASE_URL}
      NEXTAUTH_URL: ${NEXTAUTH_URL}
    depends_on:
      - postgres
  
  nginx:
    build: 
      context: ./nginx
    ports:
      - 80:80
      - 443:443
    depends_on:
      - frontend
      - backend
    volumes: 
      - ./certs:/etc/nginx/certs